name: Continuous IP Rotation Proxy

on:
  workflow_dispatch:
    inputs:
      stop:
        description: 'Stop the workflow'
        type: boolean
        required: false
        default: false

jobs:
  continuous-ip-rotation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests stem
      
      - name: Create Continuous IP Rotation Script
        run: |
          cat > continuous_ip_proxy.py << EOL
          import requests
          import subprocess
          import time
          import logging
          import random
          import stem.control
          import os
          
          # ロギング設定
          logging.basicConfig(
              level=logging.INFO, 
              format='%(asctime)s - %(levelname)s - %(message)s',
              filename='ip_rotation.log'
          )
          logger = logging.getLogger(__name__)

          def start_tor():
              """Torサービスを起動"""
              try:
                  subprocess.run(['sudo', 'service', 'tor', 'start'], check=True)
                  time.sleep(10)  # Torの起動を待つ
                  logger.info("Torサービスを起動しました")
              except Exception as e:
                  logger.error(f"Tor起動エラー: {e}")
                  raise

          def change_tor_identity():
              """Torの接続を新しいIPに変更"""
              try:
                  with stem.control.Controller.from_port(port=9051) as controller:
                      controller.authenticate()
                      controller.signal(stem.Signal.NEWNYM)
                  logger.info("新しいTorアイデンティティを取得")
                  time.sleep(5)
              except Exception as e:
                  logger.error(f"IP変更エラー: {e}")

          def get_current_ip():
              """現在のパブリックIPを取得"""
              try:
                  # Tor経由でIPを取得
                  proxies = {
                      'http': 'socks5h://localhost:9050',
                      'https': 'socks5h://localhost:9050'
                  }
                  response = requests.get(
                      'https://api.ipify.org', 
                      proxies=proxies, 
                      timeout=10
                  )
                  return response.text
              except Exception as e:
                  logger.error(f"IP取得エラー: {e}")
                  return "IP取得失敗"

          def main():
              # Torサービスの起動
              start_tor()
              
              # 継続的な実行
              iteration = 0
              while True:
                  try:
                      iteration += 1
                      logger.info(f"--- イテレーション {iteration} ---")
                      
                      # 現在のIPを表示
                      current_ip = get_current_ip()
                      logger.info(f"現在のIP: {current_ip}")
                      
                      # IPを変更
                      change_tor_identity()
                      
                      # ランダムな待機
                      wait_time = random.randint(30, 120)
                      logger.info(f"{wait_time}秒待機...")
                      time.sleep(wait_time)
                  
                  except KeyboardInterrupt:
                      logger.info("プロセスを終了します")
                      break
                  except Exception as e:
                      logger.error(f"予期しないエラー: {e}")
                      time.sleep(10)  # エラー発生時は少し待機

          if __name__ == "__main__":
              main()
          EOL

      - name: Prepare Tor
        run: |
          # 必要なパッケージをインストール
          sudo apt-get update
          sudo apt-get install -y tor

          # Torの設定を変更して匿名性を高める
          sudo tee /etc/tor/torrc << EOF
          SocksPort 9050
          ControlPort 9051
          CookieAuthentication 1
          ExitNodes {us}
          StrictNodes 1
          NewCircuitPeriod 120
          MaxCircuitDirtiness 120
          EOF
          
          # Torサービスを再起動
          sudo systemctl restart tor

      - name: Run Continuous IP Rotation
        run: |
          # Pythonスクリプトを実行
          python continuous_ip_proxy.py &
          
          # 長時間実行を可能にする
          sleep infinity

      - name: Check Stop Condition
        if: github.event.inputs.stop == 'true'
        run: |
          echo "ワークフローを停止します"
          pkill -f continuous_ip_proxy.py
          exit 0
